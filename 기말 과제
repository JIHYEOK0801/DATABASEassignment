import java.awt.event.*;
import java.awt.*;
//import java.awt.event.ActionListener;
import java.sql.*;

import javax.swing.*;
//import javax.swing.JFrame;
//import javax.swing.JPanel;
//import javax.swing.JScrollPane;
//import javax.swing.JTextArea;


public class BookListSwing extends JFrame implements ActionListener {
   JButton btnReset, btnSearchDoctors, btnSearchNurses, btnSearchPatients, btnSearchTreatments,btnSearchCharts,btnOk, btnTable,btnSearch2,btnSearch3;
   JTextArea txtResult;
   JTextField txtTable,txtField1,txtField2,txtField3,txtField4,txtField5,txtField6,txtField7,txtField8,txtField9,txtField10;
   JLabel labelD1,labelD2,labelD3,labelD4,labelD5,labelD6,labelD7,labelD8,labelD9,labelD10;
   JPanel pn1,pn2;

   static Connection con;
   Statement stmt;
   ResultSet rs;
   String Driver = "";
   String url = "jdbc:mysql://localhost:3306/madang?&serverTimezone=Asia/Seoul&useSSL=false";
   String userid = "madang";
   String pwd = "madang";

   
    
   public BookListSwing() {
      super("16011069 장지혁");
      layInit();
      conDB();
      setVisible(true);
      setBounds(500, 20, 1200, 1000); //가로위치,세로위치,가로길이,세로길이
      setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
   }

   public void layInit() {
	  labelD1 = new JLabel("Data1 :");
	  labelD2 = new JLabel("Data2 :");
	  labelD3 = new JLabel("Data3 :");
	  labelD4 = new JLabel("Data4 :");
	  labelD5 = new JLabel("Data5 :");
	  labelD6 = new JLabel("Data6 :");
	  labelD7 = new JLabel("Data7 :");
	  labelD8 = new JLabel("Data8 :");
	  labelD9 = new JLabel("Data9 :");
	  labelD10 = new JLabel("Data10 :");
	
	  btnTable = new JButton("테이블선택");
      btnOk = new JButton("입력");
      btnReset = new JButton("초기화");
      btnSearchDoctors = new JButton("의사 테이블 검색");
      btnSearchNurses = new JButton("간호사 테이블 검색");
      btnSearchPatients = new JButton("환자 테이블 검색");
      btnSearchTreatments = new JButton("진료 테이블 검색");
      btnSearchCharts = new JButton("차트 테이블 검색");
      btnSearch2 = new JButton("검색기능2");
      btnSearch3 = new JButton("검색기능3");
      txtResult = new JTextArea();
      txtTable = new JTextField("");
      txtField1 = new JTextField("");
      txtField2 = new JTextField("");
      txtField3 = new JTextField("");
      txtField4 = new JTextField("");
      txtField5 = new JTextField("");
      txtField6 = new JTextField("");
      txtField7 = new JTextField("");
      txtField8 = new JTextField("");
      txtField9 = new JTextField("");
      txtField10 = new JTextField("");
      
      pn1 = new JPanel();
      pn2 = new JPanel();
     
      pn1.add(btnReset);//초기화버튼
      pn1.add(btnSearchDoctors);//검색 1버튼 
      pn1.add(btnSearchNurses);//검색 2버튼
      pn1.add(btnSearchPatients);//검색 3버튼
      pn1.add(btnSearchTreatments);//검색 4버튼
      pn1.add(btnSearchCharts);//검색 5버튼
      pn1.add(btnSearch2);
      pn1.add(btnSearch3);
      
      pn2.setLayout(new GridLayout(13,2));

      pn2.add(new JLabel("Table 번호를 입력하고 선택 버튼을 눌러주세요 :"));
      pn2.add(txtTable);
      pn2.add(new JLabel("1.의사 / 2.간호사 / 3.환자 / 4.진료  / 5.차트"));
      pn2.add(btnTable);
      pn2.add(labelD1);
      pn2.add(txtField1);
      pn2.add(labelD2);
      pn2.add(txtField2);
      pn2.add(labelD3);
      pn2.add(txtField3);
      pn2.add(labelD4);
      pn2.add(txtField4);
      pn2.add(labelD5);
      pn2.add(txtField5);
      pn2.add(labelD6);
      pn2.add(txtField6);
      pn2.add(labelD7);
      pn2.add(txtField7);
      pn2.add(labelD8);
      pn2.add(txtField8);
      pn2.add(labelD9);
      pn2.add(txtField9);
      pn2.add(labelD10);
      pn2.add(txtField10);
      pn2.add(new JLabel("DATA를 쓰고 입력 버튼을 누르세요."));
      pn2.add(btnOk);
      

      txtResult.setEditable(false);
      JScrollPane scrollPane = new JScrollPane(txtResult);   
      add("North", pn1);
      add("Center", scrollPane);
      add("South",pn2);
      
      btnTable.addActionListener(this);
      btnOk.addActionListener(this);
      btnReset.addActionListener(this);
      btnSearchDoctors.addActionListener(this);
      btnSearchNurses.addActionListener(this);
      btnSearchPatients.addActionListener(this);
      btnSearchTreatments.addActionListener(this);
      btnSearchCharts.addActionListener(this);
      btnSearch2.addActionListener(this);
      btnSearch3.addActionListener(this);
      txtTable.addActionListener(this);
      txtField1.addActionListener(this);
      txtField2.addActionListener(this);
      txtField3.addActionListener(this);
      txtField4.addActionListener(this);
      txtField5.addActionListener(this);
      txtField6.addActionListener(this);
      txtField7.addActionListener(this);
      txtField8.addActionListener(this);
      txtField9.addActionListener(this);
      txtField10.addActionListener(this);
   }
   
   public void conDB() {
      try {
         Class.forName("com.mysql.cj.jdbc.Driver");
         System.out.println("드라이버 로드 성공");
      } catch (ClassNotFoundException e) {
         e.printStackTrace();
      }
      
      try { /* 데이터베이스를 연결하는 과정 */
          System.out.println("데이터베이스 연결 준비...");
          con = DriverManager.getConnection(url, userid, pwd);
          System.out.println("데이터베이스 연결 성공");
       } catch (SQLException e1) {
          e1.printStackTrace();
       }
   }
   
   public void createTable() {//테이블 구현
		  try { 
		   String sql[] = new String[5];
		   StringBuilder sb = new StringBuilder();
		   stmt = con.createStatement();
		   
		   stmt.execute("drop table if exists doctors,nurses,patients,treatments,charts");
		   
		   
		   sql[0] = sb.append("create table doctors(")//table1
	               .append("doc_id INTEGER NOT NULL,")//의사ID
	               .append("major_treat varchar(25) NOT NULL,")//담당진료과목
	               .append("doc_name varchar(20) NOT NULL,")//성명
	               .append("doc_gen char(1) NOT NULL,")//성별
	               .append("doc_phone varchar(15) NULL,")//전화번호
	               .append("doc_email varchar(50) UNIQUE,")//이메일
	               .append("doc_position varchar(20) NOT NULL")//직급
	               .append(");").toString();
		   	stmt.execute(sql[0]);
		   	sb.delete(0,sb.length());
		   	
		   	sql[0] = sb.append("alter table doctors ")
		   			.append("add constraint doc_id_pk primary key (doc_id);").toString();
		   	stmt.execute(sql[0]);
		   	sb.delete(0,sb.length());
		   
		   	sql[1] = sb.append("create table nurses(")//table2
		               .append("nur_id INTEGER NOT NULL,")//간호사ID
		               .append("major_job varchar(25) NOT NULL,")//담당업무
		               .append("nur_name varchar(20) NOT NULL,")//성명
		               .append("nur_gen char(1) NOT NULL,")//성별
		               .append("nur_phone varchar(15) NULL,")//전화번호
		               .append("nur_email varchar(50) UNIQUE,")//이메일
		               .append("nur_position varchar(20) NOT NULL")//직급
		               .append(");").toString();
			stmt.execute(sql[1]);
			sb.delete(0,sb.length());
			   	
			sql[1] = sb.append("alter table nurses ")
					.append("add constraint nur_id_pk primary key (nur_id);").toString();
			stmt.execute(sql[1]);
			sb.delete(0,sb.length());
		   			
			sql[2] = sb.append("create table patients(")//table3
			           .append("pat_id INTEGER NOT NULL,")//환자ID
			           .append("nur_id INTEGER NOT NULL,")//간호사ID
			           .append("doc_id INTEGER NOT NULL,")//의사ID
			           .append("pat_name varchar(20) NOT NULL,")//환자성명
			           .append("pat_gen char(1) NOT NULL,")//환자성별
			           .append("pat_jumin varchar(14) NOT NULL,")//주민번호
			           .append("pat_addr varchar(100) NOT NULL,")//주소
			           .append("pat_phone varchar(15) NULL,")//전화번호
			           .append("pat_email varchar(50) UNIQUE,")//이메일
			           .append("pat_job varchar(20) NOT NULL")//직업
			           .append(");").toString();
			stmt.execute(sql[2]);
				   	sb.delete(0,sb.length());
				   	
			sql[2] = sb.append("alter table patients ")
						.append("add constraint pat_id_pk primary key (pat_id);").toString();
			stmt.execute(sql[2]);
			sb.delete(0,sb.length());
				   	
			sql[2] = sb.append("alter table patients ")
					.append("add (constraint R_2 foreign key (doc_id) references doctors (doc_id));").toString();
			stmt.execute(sql[2]);
			sb.delete(0,sb.length());
			
			sql[2] = sb.append("alter table patients ")
					.append("add (constraint R_3 foreign key (nur_id) references nurses (nur_id));").toString();
			stmt.execute(sql[2]);
			sb.delete(0,sb.length());
				   	
			
			
			sql[3] = sb.append("create table treatments(")//table4
			           .append("treat_id INTEGER NOT NULL,")//진료ID
			           .append("pat_id INTEGER NOT NULL,")//환자ID
			           .append("doc_id INTEGER NOT NULL,")//의사ID
			           .append("treat_contents varchar(1000) NOT NULL,")//진료내용
			           .append("treat_date date NOT NULL")//진료날짜
			           .append(");").toString();
			stmt.execute(sql[3]);
				   	sb.delete(0,sb.length());
				   	
			sql[3] = sb.append("alter table treatments ")
						.append("add (constraint treat_pat_doc_id_pk primary key (treat_id,pat_id,doc_id));").toString();
			stmt.execute(sql[3]);
			sb.delete(0,sb.length());
				   	
			sql[3] = sb.append("alter table treatments ")
					.append("add (constraint R_5 foreign key (pat_id) references patients (pat_id));").toString();
			stmt.execute(sql[3]);
			sb.delete(0,sb.length());
			
			sql[3] = sb.append("alter table treatments ")
					.append("add (constraint R_6 foreign key (doc_id) references doctors (doc_id));").toString();
			stmt.execute(sql[3]);
			sb.delete(0,sb.length());
			
			
			sql[4] = sb.append("create table charts(")//table5
			           .append("chart_id varchar(20) NOT NULL,")//차트번호
			           .append("treat_id INTEGER NOT NULL,")//진료ID
			           .append("doc_id INTEGER NOT NULL,")//의사ID
			           .append("pat_id INTEGER NOT NULL,")//환자ID
			           .append("nur_id INTEGER NOT NULL,")//간호사ID
			           .append("chart_contents varchar(1000) NOT NULL")//차트내용
			           .append(");").toString();
			stmt.execute(sql[4]);
				   	sb.delete(0,sb.length());
				   	
			sql[4] = sb.append("alter table charts ")
						.append("add constraint chart_treat_doc_pat_id_pk primary key (chart_id,treat_id,doc_id,pat_id);").toString();
			stmt.execute(sql[4]);
			sb.delete(0,sb.length());
				   	
			sql[4] = sb.append("alter table charts ")
					.append("add (constraint R_4 foreign key (nur_id) references nurses (nur_id));").toString();
			stmt.execute(sql[4]);
			sb.delete(0,sb.length());
			
			sql[4] = sb.append("alter table charts ")
					.append("add (constraint R_7 foreign key (treat_id,pat_id,doc_id) references treatments (treat_id,pat_id,doc_id));").toString();
			stmt.execute(sql[4]);
			sb.delete(0,sb.length());
			
		   			
		   
		  }catch(SQLException CreateError)
			{
				System.out.println("테이블초기화작업실패"+CreateError);
			}
		  
	   }
   public void insertMydata() { //초기화 할때 쓰임
	try{
		
		String insertDoctors[] = new String[20];
		String insertNurses[] = new String[20];
		String insertPatients[] = new String[20];
		String insertTreatments[] = new String[20];
		String insertCharts[] = new String[20];
		int i;
	stmt = con.createStatement();
	
	String docid[] = new String[]{"980312","000601","001208","020403","050900","050101","062019","070576","080543","091001",
								"000001","000002","000003","000004","000005","000006","000007","000008","000009","000010"};
	
	String majortreat[] = new String[] {"소아과","내과","외과","피부과","소아과","내과","소아과","피부과","방사선과","외과",
								"소아과","내과","외과","피부과","소아과","내과","소아과","피부과","방사선과","외과"};
	
	String doc_name[] = new String[] {"이태정","안성기","김민종","이태서","김연아","차태현","전지현","홍길동","유재석","김병만",
								"하하","정준하","박명수","비","이효리","송지효","지석진","이광수","전소민","양세찬"};
	
	String doc_gen[] = new String[] {"M","M","M","M","F","M","F","M","M","M",
								"M","M","M","M","F","M","F","M","M","M"};
	
	String doc_phone[] = new String[] {"010-333-1340","011-222-0987","010-333-8743","019-777-3764","010-555-3746","011-222-7643","010-999-1265","016-333-7263","010-222-1263","010-555-3542",
								"010-000-001","010-000-002","010-000-003","010-000-004","010-000-005","010-000-006","010-000-007","010-000-008","010-000-009","010-000-010"};
	
	String doc_email[] = new String[] {"ltj@hanbh.com","ask@hanbh.com","kmj@han.com","lts@hanbh.com","kya@habhn.com","cth@hanbh.com","jjh@hanbh.com","hgd@hanbh.com","yjs@hanbh.com","kbm@hanbh.com",
							"n1@hanbh.com","n2@hanbh.com","n3@hanbh.com","n4@hanbh.com","n5@hanbh.com","n6@hanbh.com","n7@hanbh.com","n8@hanbh.com","n9@hanbh.com","n10@hanbh.com"};
	
	String doc_position[] = new String[] {"과장","과장","과장","과장","전문의","전문의","전문의","전문의","과장","전문의",
										"과장","과장","과장","과장","전문의","전문의","전문의","전문의","과장","전문의"};
	
	
	for(i=0;i<20;i++)
		{
		insertDoctors[i] = "INSERT INTO doctors Values ("+docid[i]+",'"+majortreat[i]+"','"+doc_name[i]+"','"+doc_gen[i]+"','"+doc_phone[i]+"','"+doc_email[i]+"','"+doc_position[i]+"')";
		stmt.executeUpdate(insertDoctors[i]);
		}
	
	
		String nur_id[] = new String [] {"050302","050021","040089","070605","070804","071018","100356","104145","120309","130211","000010","000020","000030","000040","000050","000060","000070","000080","000081","000082"};
		
		String major_job[] = new String [] {"소아과","내과","피부과","방사선과","내과","소아과","소아과","외과","피부과","외과","소아과","내과","피부과","방사선과","내과","소아과","소아과","외과","피부과","외과"};
		
		String nur_name[] = new String [] {"김은영","윤성애","신지원","유정화","라하나","김화경","이선용","김현","박성완","이서연","지효","다현","모모","사나","아린","효정","비니","미미","승희","유아"};
		
		String nur_gen[] = new String [] {"F","F","M","F","F","F","M","M","M","F","F","F","F","F","F","F","F","F","F","F"};
		
		String nur_phone[] = new String [] {"010-555-8751","016-333-8745","010-666-7646","010-333-4588","010-222-1340","019-888-4116","010-777-1234","010-999-8520","010-777-4996","010-222-3214","010-000-010","010-000-011","010-000-012","010-000-013","010-000-014","010-000-015","010-000-016","010-000-017","010-000-018","010-000-019"};
		
		String nur_email[] = new String [] {"key@hanbh.com","ysa@hanbh.com","sjw@hanbh.com","yjh@hanbh.com","nhn@hanbh.com","khk@hanbh.com","lsy@hanbh.com","kh@hanbh.com","psw@hanbh.com","lsy2@hanbh.com","a1@naver.com","a2@naver.com","a3@naver.com","a4@naver.com","a5@naver.com","a6@naver.com","a7@naver.com","a8@naver.com","a9@naver.com","a10@naver.com"};
		
		String nur_position[] = new String [] {"수간호사","수간호사","주임","주임","주임","주임","간호사","간호사","간호사","간호사","수간호사","수간호사","주임","주임","주임","주임","간호사","간호사","간호사","간호사"}; 
	
		for(i=0;i<20;i++)
		{
		insertNurses[i] = "INSERT INTO nurses Values ("+nur_id[i]+",'"+major_job[i]+"','"+nur_name[i]+"','"+nur_gen[i]+"','"+nur_phone[i]+"','"+nur_email[i]+"','"+nur_position[i]+"')";
		stmt.executeUpdate(insertNurses[i]);
		}
		
		
	String pat_id[] = new String[] {"2345","3545","3424","7675","4533","5546","4543","9768","4234","7643",
									"111","222","333","444","555","666","777","888","999","1010"};
	
	String n_id[] = new String [] {"050302","040089","070605","100356","070804","120309","070804","130211","130211","071018",
									"000010","000020","000030","000040","000050","000060","000070","000080","000081","000082"};
	
	String d_id[] = new String [] {"980312","020403","080543","050900","000601","070576","050101","091001","091001","062019",
									"000001","000002","000003","000004","000005","000006","000007","000008","000009","000010"};
	
	String pat_name[] = new String [] {"안상건","김성룡","이종진","최광석","정한경","유원현","최재정","이진희","오나미","송정묵",
										"장지혁","음바페","네이마르","호날두","메시","그리즈만","데용","발베르데","나바스","마르셀루"};
	
	String pat_gen[] = new String [] {"M","M","M","M","M","M","M","F","F","M",
										"M","M","M","M","M","M","M","M","M","M"};
	
	String pat_jumin[] = new String [] {"232345","543545","433424","677675","744533","765546","454543","119768","234234","987643",
									"111111","222222","333333","444444","555555","666666","777777","888888","999999","101010"};
	
	String pat_addr[] = new String [] {"서울","서울","부산","당진","강릉","대구","부산","서울","속초","서울",
										"서울","서울","부산","당진","강릉","대구","부산","서울","속초","서울"};
	
	String pat_phone[] = new String [] {"010-555-7845","010-333-7812","019-888-4859","010-222-4847","010-777-9630",
										"016-777-0214","010-555-4187","010-888-3675","010-999-6541","010-222-5874",
										"010-100-0000","010-100-0001","010-100-0002","010-100-0003","010-100-0004",
										"010-100-0005","010-100-0006","010-100-0007","010-100-0008","010-100-0010"};
	
	String pat_email[] = new String [] {"ask@ab.com","ksr@bb.com","ljj@ab.com","cks@cc.com","jhk@ab.com",
										"ywh@cc.com","cjj@bb.com","ljh@ab.com","onm@cc.com","ssm@bb.com",
										"q10@aa.com","q1@aa.com","q9@aa.com","q8@aa.com","q7@aa.com",
										"q6@aa.com","q5@aa.com","q4@aa.com","q3@aa.com","q2@aa.com"};
	
	String pat_job[] = new String [] {"회사원","자영업","회사원","회사원","교수","자영업","회사원","교수","학생","학생",
										"학생","축구선수","축구선수","축구선수","축구선수","축구선수","축구선수","축구선수","축구선수","축구선수"};
	
	for(i=0;i<20;i++)
	{
	insertPatients[i] = "INSERT INTO patients Values ("+pat_id[i]+","+n_id[i]+","+d_id[i]+",'"+pat_name[i]+"','"+pat_gen[i]+"','"+pat_jumin[i]+"','"+pat_addr[i]+"','"+pat_phone[i]+"','"+pat_email[i]+"','"+pat_job[i]+"')";
	stmt.executeUpdate(insertPatients[i]);
	}
	
	String treat_id[] = new String [] {"130516023","130628100","131205056","131218024","131224012",
										"140103001","140109026","140226102","140303003","140308087",
										"100000000","200000000","300000000","400000000","500000000",
										"600000000","700000000","800000000","900000000","110000000"};
	
	String pid[] = new String [] {"2345","3545","3424","7675","4533",
									"5546","4543","9768","4234","7643",
									"111","222","333","444","555",
									"666","777","888","999","1010"};
	
	String did[] = new String [] {"980312","020403","080543","050900","000601",
								"070576","050101","091001","091001","062019",
								"000001","000002","000003","000004","000005",
								"000006","000007","000008","000009","000010"};
	
	String t_contents[] = new String [] {"감기,몸살","피부 트러블치료","목 디스크로 MRI 촬영","중이염","장염",
										"여드름 치료","위염","화상치료","교통사고 외상치료","장염",
										"감기","감기","교통사고 외상치료","여드름치료","감기",
										"감기","감기","여드름 치료","무릎 MRI 촬영"," 교통사고 외상치료"};
	String treat_date[] = new String [] {"2013-05-16","2013-06-28","2013-12-05","2013-12-18","2013-12-24",
										"2014-01-03","2014-01-09","2014-02-26","2014-03-03","2014-03-08",
										"2014-03-10","2014-03-11","2014-03-12","2014-03-13","2014-03-14",
										"2014-03-15","2014-03-16","2014-03-17","2014-03-18","2014-03-19"};
	
	for(i=0;i<20;i++)
	{
	insertTreatments[i] = "INSERT INTO treatments Values ("+treat_id[i]+","+pid[i]+","+did[i]+",'"+t_contents[i]+"',STR_TO_DATE('"+treat_date[i]+"','%Y-%m-%d'))";
	stmt.executeUpdate(insertTreatments[i]);
	}
	
	
	String chart_id[] = new String [] {"000001","000002","000003","000004","000005","000006","000007","000008","000009","0000090"
										,"1000010","1000011","1000012","1000013","1000014","1000015","1000016","1000017","1000018","1000019","1000020"};
	
	String chart_contents[] = new String [] {"목이 심하게 부음","화농성 여드름 치료","6번 디스크 탈출","귀에 물을 닿지 않게 조치","응급처리 하였음",
											"여드름 완치","약투여함","지속적인 치료 필요","지속적인 치료 필요","입원 필요",
											"약 처방함","약 처방함","지속적인 치료 필요","연고 처방","약 처방함",
											"약 처방함","약 처방함","연고처방","관리필요","지속적인 치료필요"};
	
	for(i=0;i<20;i++)
	{
	insertCharts[i] = "INSERT INTO charts Values ('"+chart_id[i]+"',"+treat_id[i]+","+did[i]+","+pid[i]+","+n_id[i]+",'"+chart_contents[i]+"')";
	stmt.executeUpdate(insertCharts[i]);
	}
	
	}catch(SQLException e3)
	{
		System.out.println("쿼리초기화작업실패"+e3);
	}
   }
   public void resetTxtfield() {
	   txtTable.setText("");
	   txtField1.setText("");
	   txtField2.setText("");
	   txtField3.setText("");
	   txtField4.setText("");
	   txtField5.setText("");
	   txtField6.setText("");
	   txtField7.setText("");
	   txtField8.setText("");
	   txtField9.setText("");
	   txtField10.setText("");
   }
   
   
   
   @Override
   public void actionPerformed(ActionEvent e) { // 액션담당 함수
    
      try {
         stmt = con.createStatement();
         String query,tableNumber,data[]=new String [10];
         
         
         if (e.getSource() == btnTable) {//테이블 선택 버튼을 눌렀을 때
        	  tableNumber = txtTable.getText();
        	 if(tableNumber.compareTo("1")==0) {
        		labelD1.setText("의사 ID :");
        		labelD2.setText("담당진료과목 :");
        		labelD3.setText("성명 :");
        		labelD4.setText("성별 :");
        		labelD5.setText("전화번호 :");
        		labelD6.setText("이메일 :");
        		labelD7.setText("직급 :");
        		labelD8.setText("");
        		labelD9.setText("");
        		labelD10.setText("");
        	 }
        	 else if(tableNumber.compareTo("2")==0) {
         		labelD1.setText("간호사 ID :");
         		labelD2.setText("담당업무 :");
         		labelD3.setText("성명 :");
         		labelD4.setText("성별 :");
         		labelD5.setText("전화번호 :");
         		labelD6.setText("이메일 :");
         		labelD7.setText("직급 :");
         		labelD8.setText("");
         		labelD9.setText("");
         		labelD10.setText("");
         	 }
        	 else if(tableNumber.compareTo("3")==0) {
         		labelD1.setText("환자 ID :");
         		labelD2.setText("간호사 ID :");
         		labelD3.setText("의사 ID :");
         		labelD4.setText("성명 :");
         		labelD5.setText("성별 :");
         		labelD6.setText("주민번호 :");
         		labelD7.setText("주소 :");
         		labelD8.setText("전화번호 :");
         		labelD9.setText("이메일 :");
         		labelD10.setText("직업 :");
         		
         	 }
        	 else if(tableNumber.compareTo("4")==0) {
         		labelD1.setText("진료 ID :");
         		labelD2.setText("환자 ID :");
         		labelD3.setText("의사 ID :");
         		labelD4.setText("진료내용 :");
         		labelD5.setText("진료날짜(YYYY-MM-DD) :");
         		labelD6.setText("");
         		labelD7.setText("");
         		labelD8.setText("");
         		labelD9.setText("");
         		labelD10.setText("");
         	 }
        	 else if(tableNumber.compareTo("5")==0) {
         		labelD1.setText("차트번호 :");
         		labelD2.setText("진료 ID :");
         		labelD3.setText("의사 ID :");
         		labelD4.setText("환자 ID :");
         		labelD5.setText("간호사 ID :");
         		labelD6.setText("차트내용 :");
         		labelD7.setText("");
         		labelD8.setText("");
         		labelD9.setText("");
         		labelD10.setText("");
         	 }
        	 
        	 
         }
         if (e.getSource() == btnOk) { // btnOk를 눌렀을 때
        	 tableNumber = txtTable.getText();
        	 if(tableNumber.compareTo("1")==0) {
         		data[0]=txtField1.getText();
         		data[1]=txtField2.getText();
         		data[2]=txtField3.getText();
         		data[3]=txtField4.getText();
         		data[4]=txtField5.getText();
         		data[5]=txtField6.getText();
         		data[6]=txtField7.getText();
         		stmt.executeUpdate("INSERT INTO doctors VALUES ("+data[0]+",'"+data[1]+"','"+data[2]+"','"+data[3]+"','"+data[4]+"','"+data[5]+"','"+data[6]+"');");
         		txtResult.setText("doctors 테이블에 등록되었습니다!!");
         		resetTxtfield();
         	 }
         	 else if(tableNumber.compareTo("2")==0) {
         		data[0]=txtField1.getText();
         		data[1]=txtField2.getText();
         		data[2]=txtField3.getText();
         		data[3]=txtField4.getText();
         		data[4]=txtField5.getText();
         		data[5]=txtField6.getText();
         		data[6]=txtField7.getText();
         		stmt.executeUpdate("INSERT INTO nurses VALUES ("+data[0]+",'"+data[1]+"','"+data[2]+"','"+data[3]+"','"+data[4]+"','"+data[5]+"','"+data[6]+"');");
         		txtResult.setText("nurses 테이블에 등록되었습니다!!");
         		resetTxtfield();
          	 }
         	 else if(tableNumber.compareTo("3")==0) {
         		data[0]=txtField1.getText();
         		data[1]=txtField2.getText();
         		data[2]=txtField3.getText();
         		data[3]=txtField4.getText();
         		data[4]=txtField5.getText();
         		data[5]=txtField6.getText();
         		data[6]=txtField7.getText();
         		data[7]=txtField8.getText();
         		data[8]=txtField9.getText();
         		data[9]=txtField10.getText();
         		
         		stmt.executeUpdate("INSERT INTO patients VALUES ("+data[0]+","+data[1]+","+data[2]+",'"+data[3]+"','"+data[4]+"','"+data[5]+"','"+data[6]+"','"+data[7]+"','"+data[8]+"','"+data[9]+"');");
         		txtResult.setText("patients 테이블에 등록되었습니다!!");
         		resetTxtfield();
          	 }
         	 else if(tableNumber.compareTo("4")==0) {
         		data[0]=txtField1.getText();
         		data[1]=txtField2.getText();
         		data[2]=txtField3.getText();
         		data[3]=txtField4.getText();
         		data[4]=txtField5.getText();
         		stmt.executeUpdate("INSERT INTO treatments VALUES ("+data[0]+","+data[1]+","+data[2]+",'"+data[3]+"',STR_TO_DATE('"+data[4]+"','%Y-%m-%d'));");
         		txtResult.setText("treatments 테이블에 등록되었습니다!!");
         		resetTxtfield();
          	 }
         	 else if(tableNumber.compareTo("5")==0) {
         		data[0]=txtField1.getText();
         		data[1]=txtField2.getText();
         		data[2]=txtField3.getText();
         		data[3]=txtField4.getText();
         		data[4]=txtField5.getText();
         		data[5]=txtField6.getText();
         		
         		stmt.executeUpdate("INSERT INTO charts VALUES ('"+data[0]+"',"+data[1]+","+data[2]+","+data[3]+","+data[4]+",'"+data[5]+"');");
         		txtResult.setText("charts 테이블에 등록되었습니다!!");
         		resetTxtfield();
          	 }
            }
         
         else if (e.getSource() == btnReset) {// btnReset을 눌렀을 때
            txtResult.setText("");//화면의 텍스트들을 지우는 역할인듯
            createTable();
            insertMydata();
            txtResult.setText("데이터가 초기화 되었습니다!!");
     		resetTxtfield();
     		
         }
         
         else if(e.getSource() == btnSearchDoctors) {//
        	 query = "SELECT * FROM doctors ";
        	txtResult.setText("");
        	txtResult.setText("의사 ID \t 담당진료과목 \t 성명 \t 성별\t 전화번호\t 이메일\t          직급\n");
        	rs = stmt.executeQuery(query);
        	while (rs.next()) {
                String str = rs.getInt(1) + "\t" + rs.getString(2) + "\t" + rs.getString(3) + "\t" + rs.getString(4)+ "\t" + rs.getString(5)+ "\t" + rs.getString(6)+ "         " + rs.getString(7)
                      + "\n";
                txtResult.append(str);
        						}
         }
         else if(e.getSource() == btnSearchNurses) {//
        	 query = "SELECT * FROM nurses";
         	txtResult.setText("");
         	txtResult.setText("간호사 ID \t 담당업무 \t 성명 \t 성별 \t 전화번호\t 이메일\t          직급\n");
         	rs = stmt.executeQuery(query);
         	while (rs.next()) {
                 String str = rs.getInt(1) + "\t" + rs.getString(2) + "\t" + rs.getString(3) + "\t" + rs.getString(4) + "\t" + rs.getString(5)+ "\t" + rs.getString(6)+ "         " + rs.getString(7)
                       + "\n";
                 txtResult.append(str);
         						}
          }
         else if(e.getSource() == btnSearchPatients) {//검색3버튼을 눌렀을 때
        	 query = "SELECT * FROM patients";
         	txtResult.setText("");
         	txtResult.setText("환자 ID \t 간호사 ID \t 의사 ID \t 환자성명\t 환자성별\t 주민번호\t주소\t전화번호\t이메일\t직업\n");
         	rs = stmt.executeQuery(query);
         	while (rs.next()) {
                 String str = rs.getInt(1) + "\t" + rs.getInt(2) + "\t" + rs.getInt(3) + "\t" + rs.getString(4)+ "\t" + rs.getString(5)+ "\t" + rs.getString(6)+ "\t" + rs.getString(7)+ "\t" + rs.getString(8)+ "\t" + rs.getString(9)+ "\t" + rs.getString(10)
                       + "\n";
                 txtResult.append(str);
         						}
          }
         else if(e.getSource() == btnSearchTreatments) {//검색3버튼을 눌렀을 때
        	 query = "SELECT * FROM treatments";
         	txtResult.setText("");
         	txtResult.setText("진료 ID \t 환자 ID \t 의사 ID \t 진료내용 \t\t 진료날짜\n");
         	rs = stmt.executeQuery(query);
         	while (rs.next()) {
                 String str = rs.getInt(1) + "\t" + rs.getInt(2) + "\t" + rs.getInt(3) + "\t" + rs.getString(4)+ "\t\t" + rs.getString(5)
                       + "\n";
                 txtResult.append(str);
         						}
          }
         else if(e.getSource() == btnSearchCharts) {//검색3버튼을 눌렀을 때
        	 query = "SELECT * FROM charts";
         	txtResult.setText("");
         	txtResult.setText("차트번호 \t 진료 ID \t 의사 ID \t 환자 ID \t 간호사 ID \t 차트내용 \n");
         	rs = stmt.executeQuery(query);
         	while (rs.next()) {
                 String str = rs.getString(1) + "\t" + rs.getInt(2) + "\t" + rs.getInt(3) + "\t" + rs.getInt(4)+ "\t" + rs.getInt(5)+ "\t" + rs.getString(6)
                       + "\n";
                 txtResult.append(str);
         						}
          }
         else if(e.getSource() == btnSearch2) {//검색3버튼을 눌렀을 때
        	 query = "select pat_gen,count(*) from patients where pat_id in (select pat_id from treatments where treat_contents LIKE '%감기%') group by pat_gen;";
         	txtResult.setText("");
         	txtResult.setText("select pat_gen,count(*) from patients where pat_id in (select pat_id from treatments where treat_contents LIKE '%감기%') group by pat_gen;\n\n"
         			+ "진료내용에 감기가 들어있는 환자들의 남녀 통계\n\n"
         			+ "성별 \t 진료건수\n");
         	rs = stmt.executeQuery(query);
         	while (rs.next()) {
                 String str = rs.getString(1) + "\t" + rs.getInt(2)
                       + "\n";
                 txtResult.append(str);
         						}
          }
         else if(e.getSource() == btnSearch3) {//검색3버튼을 눌렀을 때
        	 query = "select major_job, count(*) from nurses"
        	 		+ " where major_job in (select dt.major_treat from treatments tt, doctors dt where tt.doc_id = dt.doc_id"
        	 		+ " group by dt.major_treat having count(*)>2)"
        	 		+ " group by major_job;	";
         	txtResult.setText("");
         	txtResult.setText("select major_job, count(*) from nurses where major_job in (select dt.major_treat from treatments tt, doctors dt where tt.doc_id = dt.doc_id "
         			+ "group by dt.major_treat having count(*)>2) "
         			+ "group by major_job;\n\n"
         			+ "진료테이블에서 2건이상의 진료가 있는 진료과목이 담당업무인 간호사들의 수\n\n"
         			+ "담당업무 \t 간호사 수\n");
         	rs = stmt.executeQuery(query);
         	while (rs.next()) {
                 String str = rs.getString(1) + "\t" + rs.getInt(2)
                       + "\n";
                 txtResult.append(str);
         						}
          }
         
         
         
      } catch (Exception e2) {
         System.out.println("쿼리 읽기 실패 :" + e2);
         txtResult.setText("오류 메세지 :" + e2);
         
/*      } finally {
         try {
            if (rs != null)
               rs.close();
            if (stmt != null)
               stmt.close();
            if (con != null)
               con.close();
         } catch (Exception e3) {
            // TODO: handle exception
         }
  */
      }

   }

   public static void main(String[] args) {
      BookListSwing BLS = new BookListSwing();
      
      //BLS.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
      //BLS.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
      
      BLS.addWindowListener(new WindowAdapter() {
    	  public void windowClosing(WindowEvent we) {
    		try {
    			con.close();
    		} catch (Exception e4) { 	}
    		System.out.println("프로그램 완전 종료!");    		
    	    System.exit(0);
    	  }
    	});
   }
}
